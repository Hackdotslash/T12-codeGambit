[{"E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\index.js":"1","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\App.jsx":"2","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Overview.jsx":"3","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Signin.jsx":"4","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\context\\AuthContext.jsx":"5","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Signup.jsx":"6","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\firebase.js":"7","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Cards\\StaffCard.jsx":"8","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Cards\\RequestsCard.jsx":"9","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Cards\\RoomsCard.jsx":"10","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Dashboard.jsx":"11","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\GuestsList.jsx":"12"},{"size":209,"mtime":1612021187709,"results":"13","hashOfConfig":"14"},{"size":869,"mtime":1612079299206,"results":"15","hashOfConfig":"14"},{"size":1221,"mtime":1612077158075,"results":"16","hashOfConfig":"14"},{"size":5055,"mtime":1612023792974,"results":"17","hashOfConfig":"14"},{"size":1649,"mtime":1612065515436,"results":"18","hashOfConfig":"14"},{"size":8941,"mtime":1612065515040,"results":"19","hashOfConfig":"14"},{"size":565,"mtime":1612021187709,"results":"20","hashOfConfig":"14"},{"size":2389,"mtime":1612067493219,"results":"21","hashOfConfig":"14"},{"size":5793,"mtime":1612082878899,"results":"22","hashOfConfig":"14"},{"size":5654,"mtime":1612077157819,"results":"23","hashOfConfig":"14"},{"size":5867,"mtime":1612079789455,"results":"24","hashOfConfig":"14"},{"size":1751,"mtime":1612082553382,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"i7vra6",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\index.js",[],["57","58"],"E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\App.jsx",[],"E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Overview.jsx",["59","60","61","62","63","64"],"import React from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport RoomsCard from \"./Cards/RoomsCard\";\r\nimport StaffCard from \"./Cards/StaffCard\";\r\nimport RequestsCard from \"./Cards/RequestsCard\";\r\nimport { useAuth } from \"./context/AuthContext\";\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nfunction Overview() {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Dashboard>\r\n      <Grid>\r\n        <Grid container spacing={5}>\r\n          <Grid item xs>\r\n            <RoomsCard currentUser={currentUser} />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <StaffCard />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={5}>\r\n          <Grid item xs>\r\n            <RequestsCard />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Dashboard>\r\n  );\r\n}\r\n\r\nexport default Overview;\r\n","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Signin.jsx",["65","66"],"import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextField, Paper, InputAdornment, CssBaseline, Typography, Button, Grid, Container, makeStyles } from \"@material-ui/core\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport { useAuth } from \"./context/AuthContext\";\r\nimport { auth } from '../firebase';\r\nimport bk from \"./images/bk1.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    // marginTop:theme.spacing(1),\r\n    // opacity:'0.8'\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1, 5),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n\r\n  },\r\n\r\n  logo: {\r\n    alignItems: 'left',\r\n    fontSize: '30px',\r\n    fontFamily: 'Roboto Condensed'\r\n    // fontFamily:theme.typography.fontFamily('')\r\n\r\n  },\r\n\r\n  image: {\r\n    backgroundImage: `url(${bk})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    // opacity:'0.8'\r\n  },\r\n\r\n  avatar: {\r\n    width: '70px',\r\n    alignContent: 'center',\r\n    marginTop: theme.spacing(2)\r\n    // marginLeft:theme.spacing(18)\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 0, 2),\r\n    alignItems: 'center',\r\n    // background:'#0B75F4'\r\n  },\r\n}));\r\n\r\nexport default function Signin(props) {\r\n  const classes = useStyles();\r\n  const email = useRef();\r\n  const password = useRef();\r\n  const { signin } = useAuth();\r\n  const [busy, setBusy] = React.useState(false);\r\n  const [error, seterror] = React.useState(\"\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      seterror(\"\");\r\n      setBusy(true);\r\n      auth\r\n        .signInWithEmailAndPassword(email.current.value, password.current.value)\r\n        .then(async (cred) => {\r\n          props.history.push(\"/dashboard/overview\");\r\n        });\r\n    } catch (err) {\r\n      seterror(err);\r\n    }\r\n    setBusy(false);\r\n  };\r\n\r\n  const logo = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.logo}>\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n            <p><b>Bon Voyage</b></p>\r\n          </Grid>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const signInForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\" className={classes.paper}><b>Sign In</b></Typography>\r\n          <form onSubmit={handleSubmit} className={classes.form}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              inputRef={email}\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AlternateEmailIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              inputRef={password}\r\n              autoComplete=\"current-password\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n                  </Link>\r\n            </Grid>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                disabled={busy}\r\n                className={classes.submit}\r\n                onClick={handleSubmit}\r\n              >Sign In</Button>\r\n            </Grid>\r\n          </form>\r\n          <Grid item >\r\n            Don't have an Account? <Link to=\"/signup\">Sign Up</Link>\r\n          </Grid>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <Grid container component=\"main\" className={classes.root} direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <CssBaseline />\r\n        {logo()}\r\n        <Grid item xs={false} sm={8} md={5} component={Paper}>\r\n          <Container elevation={6} >\r\n            {signInForm()}\r\n          </Container>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\context\\AuthContext.jsx",["67","68"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { auth, db } from \"../../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n\r\n    const [loading, setloading] = useState(true);\r\n\r\n    function signup(email, password, name, city, pincode, phone, gstn) {\r\n        auth\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((cred) => {\r\n                return db.collection(\"hotels\").doc(cred.user.uid).set({\r\n                    name: name,\r\n                    city: city,\r\n                    pincode: pincode,\r\n                    phone: phone,\r\n                    gstn: gstn,\r\n                });\r\n            })\r\n            .catch(function (err) {\r\n                console.log(\"SIGNIN ERROR\", err);\r\n            });\r\n    }\r\n\r\n    function signin(email, password) {\r\n        return auth\r\n            .signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n    useEffect(() => {\r\n        const unsub = auth.onAuthStateChanged((user) => {\r\n            setCurrentUser(user);\r\n            setloading(false);\r\n        });\r\n        return unsub;\r\n    }, []);\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        signin,\r\n        logout,\r\n    };\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Signup.jsx",["69"],"import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextField, Paper, InputAdornment, CssBaseline, Typography, Button, Grid, Container, makeStyles } from \"@material-ui/core\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport CallIcon from '@material-ui/icons/Call';\r\n\r\nimport { useAuth } from \"./context/AuthContext\";\r\nimport bk from \"./images/bk1.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1, 5),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  sub: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n  logo: {\r\n    padding: theme.spacing(1, 0, 2, 3),\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    alignItems: 'left',\r\n    fontSize: '35px',\r\n    fontFamily: 'Abril Fatface'\r\n    // fontFamily:theme.typography.fontFamily('')\r\n  },\r\n\r\n  image: {\r\n    backgroundImage: `url(${bk})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n\r\n  avatar: {\r\n    width: '70px',\r\n    alignContent: 'center',\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 0, 2),\r\n    alignItems: 'center'\r\n  },\r\n}));\r\n\r\nexport default function Signup(props) {\r\n  const classes = useStyles();\r\n  const email = useRef();\r\n  const password = useRef();\r\n  const name = useRef();\r\n  const gstn = useRef();\r\n  const city = useRef();\r\n  const pincode = useRef();\r\n  const phnNum = useRef();\r\n  const { signup } = useAuth();\r\n  const [busy, setBusy] = React.useState(false);\r\n  const [error, seterror] = React.useState(\"\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      seterror(\"\");\r\n      setBusy(true);\r\n      signup(email.current.value, password.current.value, name.current.value, city.current.value, pincode.current.value, phnNum.current.value, gstn.current.value);\r\n      props.history.push(\"/signin\");\r\n    } catch (err) {\r\n      seterror(err);\r\n    }\r\n    setBusy(false);\r\n  };\r\n\r\n  const signUpForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\" className={classes.paper}><b>Sign Up</b></Typography>\r\n          <form onSubmit={handleSubmit} className={classes.form}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"Name\"\r\n              label=\"Name\"\r\n              inputRef={name}\r\n              autoFocus\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AccountCircleIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                id=\"Name\"\r\n                label=\"City\"\r\n                inputRef={city}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LocationCityIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                id=\"Name\"\r\n                label=\"Pincode\"\r\n                inputRef={pincode}\r\n                style={{ marginLeft: '5px' }}\r\n              />\r\n            </div>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"Name\"\r\n              label=\"Contact Number\"\r\n              inputRef={phnNum}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <CallIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"Name\"\r\n              label=\"GST Number\"\r\n              inputRef={gstn}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <ConfirmationNumberIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              inputRef={email}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AlternateEmailIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              inputRef={password}\r\n              autoComplete=\"current-password\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                disabled={busy}\r\n                className={classes.submit}\r\n                onClick={handleSubmit}\r\n              >Sign Up</Button>\r\n            </Grid>\r\n          </form>\r\n          {/* <Grid container> */}\r\n          <Grid item>\r\n            {/* <Link href=\"./Signup.js\" variant=\"body2\">\r\n              {\"Don't have an account? Sign Up\"}\r\n              </Link> */}\r\n              Already have an Account? <Link to=\"/signin\">Sign In</Link>\r\n          </Grid>\r\n          {/* </Grid> */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const logo = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n          <Grid item xs>\r\n            <Typography className={classes.logo} variant=\"h3\">Bon Voyage</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container className={classes.sub} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n          <Grid item >\r\n            <InputAdornment><CheckCircleIcon color=\"primary\" /></InputAdornment>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\">Get Started Quickly</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body2\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit.</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container className={classes.sub} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n          <Grid item>\r\n            <InputAdornment><CheckCircleIcon color=\"primary\" /></InputAdornment>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\">Get Started Quickly</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body2\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit.</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <Container>\r\n        <Grid container component=\"main\" className={classes.root} alignItems=\"center\">\r\n          <CssBaseline />\r\n          <Grid item sm={4} md={7}>\r\n            {logo()}\r\n          </Grid>\r\n          <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6}>\r\n            {signUpForm()}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\firebase.js",[],"E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Cards\\StaffCard.jsx",[],"E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Cards\\RequestsCard.jsx",["70"],"import React, { useEffect } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ButtonGroup, Container, Grid } from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { db } from \"../../firebase.js\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n  },\r\n  number: {\r\n    fontSize: 36,\r\n    color: \"blue\",\r\n  },\r\n  actions: {\r\n    alignItems: \"center\",\r\n  },\r\n  mainRequestCont: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  requestSummary: {\r\n    alignItems: \"right\",\r\n  },\r\n  requestSummaryButtons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst listOfRequests = [\r\n  {\r\n    name: \"ABC XYZ\",\r\n    city: \"Surat\",\r\n    checkin: \"123\",\r\n    checkout: \"234\",\r\n    age: \"34\",\r\n    contact: \"123445\",\r\n  },\r\n  {\r\n    name: \"ABC XYZ\",\r\n    city: \"Surat\",\r\n    checkin: \"123\",\r\n    checkout: \"234\",\r\n    age: \"34\",\r\n    contact: \"123445\",\r\n  },\r\n];\r\n\r\nfunction RequestsCard() {\r\n  const classes = useStyles();\r\n  const [list, setList] = React.useState(listOfRequests);\r\n  const [guest, setGuest] = React.useState([]);\r\n\r\n  const handleAcceptRequest = (index) => {\r\n    let newRequestList = [...list];\r\n    newRequestList.splice(index, 1);\r\n    setList(newRequestList);\r\n  };\r\n  const handleRejectRequest = (index) => {\r\n    let newRequestList = [...list];\r\n    newRequestList.splice(index, 1);\r\n    setList(newRequestList);\r\n  };\r\n  async function loadData() {\r\n    await db.collection('bookings').onSnapshot((snap) => {\r\n      if (snap.size) {\r\n        let mylist = [];\r\n        snap.forEach((doc) => {\r\n          if (doc.data().status === 'pending') {\r\n            mylist.push({ ...doc.data() });\r\n          }\r\n        })\r\n        setGuest(mylist);\r\n      }\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    console.log(guest);\r\n  }, [])\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"primary\" gutterBottom>\r\n          List of Requests\r\n        </Typography>\r\n        <div id=\"add-to-accordian\">\r\n          {guest && guest.map((request, index) => {\r\n            return (\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-label=\"Expand\"\r\n                  aria-controls=\"additional-actions1-content\"\r\n                  id=\"additional-actions1-header\"\r\n                >\r\n                  <AccountCircleIcon fontSize=\"large\" />\r\n                  <Container className={classes.mainRequestCont}>\r\n                    <Container className={classes.requestSummary}>\r\n                      <Grid>\r\n                        <Grid\r\n                          container\r\n                          spacing={2}\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          <Grid item xs>\r\n                            <Typography>Guest Name: {request.guestName}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Container>\r\n                    <Container className={classes.requestSummaryButtons}>\r\n                      <ButtonGroup>\r\n                        <Button\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleAcceptRequest(index);\r\n                          }}\r\n                          color=\"primary\"\r\n                        >\r\n                          Accept\r\n                        </Button>\r\n                        <Button\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleRejectRequest(index);\r\n                          }}\r\n                          color=\"secondary\"\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Container>\r\n                  </Container>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Container>\r\n                    <Typography>\r\n                      <strong>Check in: </strong> {request.checkin}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <strong>Check Out: </strong> {request.checkout}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <strong>Current City:</strong> {request.currentCity}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <strong>Age: </strong> {request.age}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <strong>Contact No.: </strong> {request.contactNum}\r\n                    </Typography>\r\n                  </Container>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            );\r\n          })}\r\n        </div>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button className={classes.button} size=\"small\">\r\n          Show More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RequestsCard;\r\n","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Cards\\RoomsCard.jsx",["71","72","73"],"import React, { useEffect } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport { db } from '../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: 200,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n  },\r\n  number: {\r\n    fontSize: 30,\r\n    color: \"#1a3efd\",\r\n  },\r\n  actions: {\r\n    alignItems: \"center\",\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 600,\r\n    backgroundColor: theme.palette.background.paper,\r\n    // border: '1px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nfunction RoomsCard({ currentUser }) {\r\n  const classes = useStyles();\r\n  const [openAvailModal, setAvailOpen] = React.useState(false);\r\n  const [openOccupModal, setOccupOpen] = React.useState(false);\r\n  const [roomData, setRoomData] = React.useState({});\r\n  const occupied = React.useRef();\r\n  const available = React.useRef();\r\n  const price = React.useRef();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const loadData = () => {\r\n    if (currentUser !== null) {\r\n      db.collection('hotels').doc(currentUser.uid).get().then((doc) => {\r\n        console.log(\"Doc\", doc);\r\n        setRoomData(doc.data());\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (currentUser !== null) {\r\n      try {\r\n        db.collection('hotels').doc(currentUser.uid).set({\r\n          availableRooms: available.current.value,\r\n          occupiedRooms: occupied.current.value,\r\n          price: price.current.value\r\n        }, { merge: true });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    available.current.value = \"\";\r\n    occupied.current.value = \"\";\r\n    price.current.value = \"\";\r\n    loadData();\r\n    handleClose();\r\n  };\r\n\r\n  const modalbody = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <Grid container xs={12} spacing={1}>\r\n        <Grid item xs={12} style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"Available\"\r\n            inputRef={available}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"Occupied\"\r\n            inputRef={occupied}\r\n            fullWidth\r\n            style={{ marginLeft: '5px' }}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"Price\"\r\n            inputRef={price}\r\n            fullWidth\r\n            style={{ marginLeft: '5px' }}\r\n          />\r\n        </Grid>\r\n        <Button\r\n          type=\"submit\"\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          style={{ marginLeft: '5px' }}\r\n          // disabled={busy}\r\n          className={classes.submit}\r\n          onClick={handleSubmit}\r\n        >Update</Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    console.log(roomData);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography variant=\"h4\" style={{ color: '#1a3efd' }} gutterBottom>\r\n            Rooms\r\n        </Typography>\r\n          <Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs>\r\n                <Button\r\n                  className={classes.roomBtns}\r\n                  onClick={() => {\r\n                    setAvailOpen(true);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <Typography variant=\"h6\">Available</Typography>\r\n                </Button>\r\n                <Typography variant=\"h6\" className={classes.number}> {roomData.availableRooms} </Typography>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button\r\n                  className={classes.roomBtns}\r\n                  onClick={() => {\r\n                    setOccupOpen(true);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <Typography variant=\"h6\">Occupied</Typography>\r\n                </Button>\r\n                <div className={classes.number}> {roomData.occupiedRooms} </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <Button onClick={handleOpen} style={{ borderColor: '#1a3efd', color: '#1a3efd' }} variant=\"outlined\">Update</Button>\r\n        </CardActions>\r\n      </Card>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {modalbody}\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default RoomsCard;\r\n","E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\Dashboard.jsx",["74","75"],"E:\\Study\\Projects\\Dotslash 4.0\\T12-codeGambit\\hotel\\src\\components\\GuestsList.jsx",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":19},{"ruleId":"82","severity":1,"message":"87","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":19},{"ruleId":"82","severity":1,"message":"88","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":14},{"ruleId":"82","severity":1,"message":"89","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":18},{"ruleId":"82","severity":1,"message":"90","line":17,"column":9,"nodeType":"84","messageId":"85","endLine":17,"endColumn":16},{"ruleId":"82","severity":1,"message":"91","line":63,"column":11,"nodeType":"84","messageId":"85","endLine":63,"endColumn":17},{"ruleId":"82","severity":1,"message":"92","line":65,"column":10,"nodeType":"84","messageId":"85","endLine":65,"endColumn":15},{"ruleId":"82","severity":1,"message":"93","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":18},{"ruleId":"82","severity":1,"message":"94","line":2,"column":20,"nodeType":"84","messageId":"85","endLine":2,"endColumn":24},{"ruleId":"82","severity":1,"message":"92","line":75,"column":10,"nodeType":"84","messageId":"85","endLine":75,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":95,"column":6,"nodeType":"97","endLine":95,"endColumn":8,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"99","line":53,"column":10,"nodeType":"84","messageId":"85","endLine":53,"endColumn":24},{"ruleId":"82","severity":1,"message":"100","line":54,"column":10,"nodeType":"84","messageId":"85","endLine":54,"endColumn":24},{"ruleId":"95","severity":1,"message":"101","line":145,"column":6,"nodeType":"97","endLine":145,"endColumn":8,"suggestions":"102"},{"ruleId":"82","severity":1,"message":"103","line":13,"column":8,"nodeType":"84","messageId":"85","endLine":13,"endColumn":18},{"ruleId":"82","severity":1,"message":"104","line":15,"column":8,"nodeType":"84","messageId":"85","endLine":15,"endColumn":22},{"ruleId":"82","severity":1,"message":"105","line":3,"column":3,"nodeType":"84","messageId":"85","endLine":3,"endColumn":12},{"ruleId":"82","severity":1,"message":"106","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":17},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'signin' is assigned a value but never used.","'error' is assigned a value but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'guest'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'openAvailModal' is assigned a value but never used.","'openOccupModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadData' and 'roomData'. Either include them or remove the dependency array.",["110"],"'AddBoxIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'TextField' is defined but never used.","'useAuth' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [guest]",{"range":"115","text":"116"},"Update the dependencies array to be: [loadData, roomData]",{"range":"117","text":"118"},[2452,2454],"[guest]",[3872,3874],"[loadData, roomData]"]